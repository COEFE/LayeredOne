/**
 * Fix Firebase private key format for Vercel deployment
 * 
 * This script helps resolve the "No valid private key found in environment variables" 
 * error that occurs in Vercel deployments due to newline handling differences.
 */
const fs = require('fs');
const path = require('path');

console.log('ðŸ”‘ Fixing Firebase private key format for Vercel...');

// Default private key format for testing
const defaultPrivateKey = `-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCe/m4WApen/M1n
oOwnO1ajvbdJ3mg4nOPtGFg0OUsnc3CrHDVXObIEaNeYHuxOUFgRLbOx8+xcrmRB
GVoJL367YgIzcaXEVlvFCQ4WrVZDyESWHCjTOafFpAcjM2GgEEiCHRauDSiqwBXo
iyzH/aMKG7zu6xJpRNm2HDlPF9lo6PPC+DGtfV5n4lDWmOQIpghAI4dDbabfLLmL
uNzk2Ddahx5xcWFiJ/ikLRpnnpbPB1o7EbV0wyKPumCBi8/D5oJQIQ0tl7LuyKAj
sQ4U4ofxheCE5pq64GEh9SBmCUbnh5mPyS1tItOXw0kNKp66DXvABsBNzIfsa+dr
nIEgqlE7AgMBAAECggEATo6N3Agp4JGS97nWFMhH1Z1+O1xNiHNUVqhppFwOmw55
w8GrRU63e2BF7d6RiVw/NzWqjKllxqFP3a5mAxXZe0JAriRf8DNvIlqIAIJilhkU
ckq1jS/2ijuyXx0bBlglS0yOES9lQYCpEn35gVL7xJnR7wZs0WB4ZXdqhX7WJ/Py
ODZykBeJ4qsXcbJO7E58vRQoLj3yYu5wEsoVYriHLiNXfVxAEd3rlZ0UeLjGee9z
r55TuRv7AhxF63geeXp2uLRt5e6wRyDMsdCFwhwQKJXfnW1NjLr1lhRuvtUANdrB
fQbPyHklJPAYNUZBax0UvhqTheWJDTHpUHhBpEjbgQKBgQDSnSQpFoQd/MThnUdu
AzSZ0WEXE1cNWsBf0T64NlJpySo4KOAtyythSjIuytiBmHLndS0JPaWV42bkIFEG
WlLTdyCaY5MPVtbUCPBJZZeUB3eo44S46Mp0uxxaMGC3wLR2ke2aHTlvQa+yaE4W
g8ad+t6wlS1jC9WUUsxqIE4f+wKBgQDBQZahY+CP0MDG2q/YJOGpqrft5VxpVPtD
z8IsG10MjHL/2HK8nw8EJ+AaXINM54mcxLkb0attZZUIf2Hfs8Yi/dF1g4hbahT6
1MzWBnTYCHYVQt5KAQLH5GJKVJaUtevZBKN6FQ+aohLiOKBc6J0OppL1queN6K7g
Tv7D5gWPwQKBgCrki+++QSvmRaZ5JIn4JydIaBCOBMWYfONGtxJHJeObb3i+gmFx
JiWLOcsjzpIeHRCcYY6nOmjbRiIhnr6/eGzOrxoiO1n9YoUOSPl5sjQYjTsdEvOh
nVHGpZCMl7X0jgwzzgL7/q104DZiXbziG3ojFGU8DGFGkLnDXxQh/icvAoGAPWKp
BxCjlur3IPL74gstBuisTcuKBAczXMHUapAyiTbfnHbTUyiu62IDJDx4lGgDZSFz
rut1qWUX5sAXhagj6p929f3WxTq3+Ui4287nNGvTnkNEOnuBt57KvdOKlSgIB0Ia
7z9bWoHav7K+9WQJ50pv6crkjEX5rlRJRk59O8ECgYEAuipnpFp3k05ZUl1W8bVd
kPzrL9/rxFviaapUi8ZwE4CPEEopXRO6nJSen6QjKkxM3uRBybTa1u1cc2e4AMBV
yIbP4SVlkIAOoR0jk4e9skCgN0JWjqt36kbbM9GWAAz97Gw25vqxtPFCj0EUahVo
T78NlclGYfEsc1Qvj/fc7Ws=
-----END PRIVATE KEY-----`;

// Base64 encode the private key
const base64EncodeKey = (key) => {
  return Buffer.from(key).toString('base64');
};

// Create a .env.vercel file with properly formatted credentials 
const createVercelEnv = () => {
  try {
    // Read existing .env.local if available
    let envContent = '';
    const envLocalPath = path.join(process.cwd(), '.env.local');
    
    if (fs.existsSync(envLocalPath)) {
      envContent = fs.readFileSync(envLocalPath, 'utf8');
      console.log('Found existing .env.local file');
    } else {
      console.log('No .env.local found, creating with defaults');
    }
    
    // Extract values or use defaults
    const getEnvVar = (name, defaultValue = '') => {
      const match = envContent.match(new RegExp(`${name}=["']?([^"'\n]+)["']?`));
      return match ? match[1] : defaultValue;
    };
    
    // Get the private key, formatting for Vercel
    let privateKey = '';
    let foundKey = false;
    
    // First try to find the private key in environment variables
    const privateKeyMatch = envContent.match(/FIREBASE_PRIVATE_KEY=["']?(.*?)["']?$/m);
    if (privateKeyMatch && privateKeyMatch[1]) {
      privateKey = privateKeyMatch[1];
      console.log('Found FIREBASE_PRIVATE_KEY in .env.local');
      foundKey = true;
      
      // Convert escaped newlines to actual newlines
      if (privateKey.includes('\\n')) {
        privateKey = privateKey.replace(/\\n/g, '\n');
        console.log('Converted escaped newlines to actual newlines');
      }
    } else {
      console.log('No FIREBASE_PRIVATE_KEY found in .env.local');
      privateKey = defaultPrivateKey;
      console.log('Using default private key (for development only)');
    }
    
    // Encode the key in Base64 for easier handling
    const base64Key = base64EncodeKey(privateKey);
    console.log('Generated Base64 encoded private key');
    
    // Get other environment variables
    const clientEmail = getEnvVar('FIREBASE_CLIENT_EMAIL', 'firebase-adminsdk-fbsvc@variance-test-4b441.iam.gserviceaccount.com');
    const projectId = getEnvVar('NEXT_PUBLIC_FIREBASE_PROJECT_ID', 'variance-test-4b441');
    const storageBucket = getEnvVar('NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET', 'variance-test-4b441.firebasestorage.app');
    
    // Create .env.vercel content
    const vercelEnvContent = `# Firebase credentials for Vercel deployment
# Generated by fix-vercel-private-key.js
# These variables are formatted specifically for Vercel

# Firebase project details
NEXT_PUBLIC_FIREBASE_PROJECT_ID=${projectId}
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${storageBucket}
FIREBASE_CLIENT_EMAIL=${clientEmail}

# Firebase private key - IMPORTANT: This uses actual newlines, not escaped \\n characters
FIREBASE_PRIVATE_KEY=${privateKey}

# Alternative: Base64 encoded private key (easier to handle in CI environments)
FIREBASE_PRIVATE_KEY_BASE64=${base64Key}

# NOTE: When setting environment variables in Vercel's dashboard:
# 1. For FIREBASE_PRIVATE_KEY: Use actual newlines (press Enter), not \\n
# 2. For FIREBASE_PRIVATE_KEY_BASE64: Just paste the entire string (no newlines needed)
`;

    // Write to .env.vercel
    fs.writeFileSync('.env.vercel', vercelEnvContent);
    console.log('Created .env.vercel with properly formatted credentials');
    console.log('Use this file as a reference for setting up Vercel environment variables');
    
    // Create vercel.json for easier deployment
    const vercelConfig = {
      "version": 2,
      "env": {
        "FIREBASE_CLIENT_EMAIL": clientEmail,
        "NEXT_PUBLIC_FIREBASE_PROJECT_ID": projectId,
        "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET": storageBucket,
        "FIREBASE_PRIVATE_KEY_BASE64": base64Key
      },
      "buildCommand": "npm run build",
      "outputDirectory": ".next"
    };
    
    fs.writeFileSync('vercel.json', JSON.stringify(vercelConfig, null, 2));
    console.log('Created vercel.json with environment configuration');
    
    return true;
  } catch (error) {
    console.error('Error creating Vercel environment files:', error);
    return false;
  }
};

// Run the main function
createVercelEnv();

console.log('\nâœ… Firebase private key fix for Vercel completed!');
console.log('\nNext steps:');
console.log('1. Check .env.vercel for correctly formatted credentials');
console.log('2. Copy and paste the Base64 encoded key into Vercel dashboard environment variable: FIREBASE_PRIVATE_KEY_BASE64');
console.log('3. Deploy with: vercel deploy');
console.log('4. If issues persist, check logs in the Vercel dashboard');